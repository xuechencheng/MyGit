RectTransform脚本
1.Anchor
锚点：Anchors，由两个点确定：AnchorMin以及AnchorMax

2.绝对与相对布局
想要清晰的理解RectTransform的各个属性，首先需要建立的第一个概念就是绝对布局以及相对布局。
所谓的绝对布局，就是出现锚点的情况，在绝对布局的情况下无论分辨率是多少，父物体多大，该UI元素的大小是恒定的。
所谓相对布局，就是出现锚框的情况。在这种情况下UI元素的四个角，距离四个对应的锚点的距离是不变的。
其中的PosZ表征的是该元素到父物体在Z轴上的偏移，利用这个值可以调整UI元素的显示顺序。

3.Pivot
Pivot中心点轴心，就是该UI元素旋转缩放的中心点。

4.Offset
OffsetMax这个值就是UI元素的右上角的坐标，减去AnchorMax的值，得到一个从AnchorMax指向元素右上角的向量(vector2类型)。
在锚框的情况下我们可以在代码里面动态的去调整UI元素相对边界的距离，其次更重要的是，利用这两个值就可以计算出sizeDelta的值了。

5.sizeDelta
其实sizeDelta的值就是OffsetMax-OffsetMin的值。
sizeDelta的几何意义是ui本身大小减去锚框大小。

6.rect
rect.width和rect.height属性是元素的大小。
rect.x和rect.y表示的是以Pivot为原点，UI元素左下角的坐标。
rect是只读的。

7.anchoredPosition
通过直接设置anchoredPosition的值可以改变UI元素的位置，但也是要分锚点和锚框的情况。
在使用锚点的情况下，anchoredPosition表示的是元素Pivot到Anchor的距离。
在使用锚框的情况下，anchoredPosition表示的是元素Pivot到锚框中心点的距离。

8.Recttransform类中一些方法的介绍
8.1 SetSizeWithCurrentAnchors(Animations.Axis axis, float size)
这个方法无论在绝对布局还是相对布局的情况下，都可以通过直接设置rect中的width和height值来改变UI元素的大小。

8.2 SetInsetAndSizeFromParentEdge(RectTransform.Edge edge, float inset, float size)
这个方法就比较冷门了可能，不过还是挺强大的。调用这个方法，可以根据父物体的Edge（某一边）去布局。
其中第一个参数就是用于确定基准的边，第二个参数是UI元素的该边界与父物体该边界的距离，第三个元素是设定选定轴上UI元素的大小。
在使用这个方法的时候要注意锚点也会改变。

8.3 GetWorldCorners(Vector3[] fourCornersArray)
使用这个方法，可以取得UI元素四个角的世界坐标。

参考文档：https://www.jianshu.com/p/4592bf809c8b








