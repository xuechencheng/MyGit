DOTween.Init
The first time you create a tween, DOTween will initialize itself automatically, using default values.
If instead you prefer to initialize it yourself (recommended), call this methods once, BEFORE creating any tween (calling it afterwards will have no effect).
Consider that you can still change all init settings whenever your want, by using DOTween's global settings
Optionally, you can chain SetCapacity to the Init method, which allows to set the max Tweeners/Sequences initial capacity 
(it's the same as calling DOTween.SetTweensCapacity later).

static DOTween.Init(bool recycleAllByDefault = false, bool useSafeMode = true, LogBehaviour logBehaviour = LogBehaviour.ErrorsOnly)
Initializes DOTween. Call it without any parameter to use the preferences you set in DOTween's Utility Panel 
(otherwise they will be overrided by any eventual parameter passed).
recycleAllByDefault If TRUE all new tweens will be set for recycling, meaning that when killed they won't be destroyed but instead will be put in a pool and reused rather than creating new tweens. This option allows you to avoid GC allocations by reusing tweens, but you will have to take care of tween references, since they might result active even if they were killed (since they might have been respawned and might now be in use as other completely different tweens).
If you want to automatically set your tween references to NULL when a tween is killed you can use the OnKill callback like this:
.OnKill(()=> myTweenReference = null)
You can change this setting at any time by changing the static DOTween.defaultRecyclable property, 
or you can set the recycling behaviour for each tween separately, using SetRecyclable

useSafeMode If set to TRUE tweens will be slightly slower but safer, allowing DOTween to automatically take care of things like targets being destroyed while a tween is running.
logBehaviour Depending on the chosen mode DOTween will log only errors, errors and warnings, or everything plus additional informations.
// EXAMPLE A: initialize with the preferences set in DOTween's Utility Panel
﻿﻿﻿﻿﻿DOTween.Init();
﻿﻿﻿﻿﻿// EXAMPLE B: initialize with custom settings, and set capacities immediately
﻿﻿﻿﻿﻿DOTween.Init(true, true, LogBehaviour.Verbose).SetCapacity(200, 10);