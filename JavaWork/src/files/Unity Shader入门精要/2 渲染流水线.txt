Shader的中文名是什么？
着色器
如果你没有了解过什么的工作流程，就永远无法说自己对Shader已经入门？
渲染流水线
渲染流水线的最终目的在于生成或者说是渲染什么？
一张二维纹理
使用流水线的好处在于可以提高什么？
单位时间的生产量
流水线系统中决定最后生成速度的是什么工序所需的时间？它是性能瓶颈
最慢的工序
如果把一个非流水线系统分成n个流水线阶段，且每个阶段耗费相同时间的话，会使整个系统速度提升多少倍？
n倍
渲染流水线的工作任务在于由一个三维场景出发，渲染一张什么？
二维图像
渲染流程分成哪三个阶段？
应用阶段，几何阶段和光栅化阶段
应用阶段向几何阶段输出什么？
渲染图元
几何阶段向光栅化阶段输出什么？
屏幕空间的顶点信息
应用阶段是由我们的应用主导的，通常由什么硬件负责实现？
CPU
应用阶段有三个主要任务，首先，我们需要准备好场景数据，其次，为了提高渲染性能，我们往往要做一个粗粒度剔除工作，最后我们需要设置每个模型的什么？
渲染状态
通俗地讲，渲染图元可以是什么？
点，线，三角面
什么阶段用于处理所有和我们要绘制的几何相关的事情？例如，决定需要绘制的图元是什么，怎样绘制它们，在哪里绘制它们。
几何阶段
几何阶段通常在什么硬件上进行？
GPU
几何阶段负责和每一个每个渲染图元打交道，进行逐什么的操作？
逐顶点，逐多边形
几何阶段的一个重要任务就是把顶点坐标变换到什么空间中，再交给光栅器进行处理？
屏幕空间
什么阶段使用上个阶段传递的数据来产生屏幕上的像素，并渲染出最终的图像？
光栅化阶段
什么阶段任务主要是决定每个渲染图元中的哪些像素应该被绘制到屏幕上，并渲染出最终的图像？
光栅化阶段
光栅化阶段需要对上一个阶段得到的逐顶点数据进行什么操作，然后再进行逐像素处理？
插值
应用阶段大致可分为哪三个阶段？
1，把数据加载到显存中；2，设置渲染状态；3，调用DrawCall
渲染所需的数据从硬盘加载到系统内存，然后，网格和纹理等数据又被加载到哪里？
显存
渲染中需要加载到显存中的数据有哪些？
顶点的位置信息，法线方向，顶点颜色，纹理坐标等
什么是渲染状态，通俗地讲，这些状态定义了场景中的网格什么特性？例如使用哪个顶点着色器，片元着色器，光源属性，材质等
怎样被渲染
准备工作做好之后，通过什么渲染命令通知GPU？
Draw Call
Draw Call就是一个命令，它的发起方是CPU，接收方是什么？
GPU
Draw Call仅仅会指向什么，而不会再包含材质信息，因为我们已经在上一阶段中完成？
一个需要被渲染的图元列表
GPU渲染流水线接收什么数据作为输入？
顶点数据
这些顶点数据由应用阶段加载到显存，再由什么指定？
Draw Call
几何阶段分为哪5个步骤？
顶点着色器，曲面细分着色器，几何着色器，裁剪和屏幕映射
什么着色器着色器是完全可编程的，通常用于实现顶点的空间变换、顶点着色等功能？
顶点着色器
什么阶段的目的是将那些不在摄像机视野内的顶点裁减掉，并剔除某些三角图元的面片。这一阶段是可配置的。
裁剪阶段
什么阶段是不可配置和编程的，它负责把每个图元的坐标转换到屏幕坐标系中？
屏幕映射
光栅化阶段分为哪4个步骤？
三角形设置、三角形遍历、片元着色器和逐片元操作
什么阶段负责执行很多重要的操作，例如修改颜色、深度缓冲、进行混合等，它是不可编程，但可高度配置的？
逐片元操作
顶点着色器的处理单位是什么，也就是说，输入进来的每个顶点都会调用一次顶点着色器？
顶点
顶点着色器本身不可以创建或销毁任何顶点，而且无法得到什么信息？
顶点之间的关系
顶点着色器需要完成的两个主要工作是什么？
坐标变换和逐顶点光照
坐标变换，在什么在这种非常有用，例如，我们可以通过改变顶点位置来模拟水面，布料等。
顶点动画
一个最基本的顶点着色器必须完成的一个工作是，把顶点坐标从模型空间转换到什么空间？
齐次裁剪空间
通过什么代码把顶点坐标转换到齐次裁剪坐标系下？
o.pos = mul(UNITY_MVP, v.position)
接着通常再由硬件做透视除法后，最终得到什么坐标？
归一化的设备坐标（NDC）
在OpenGL和Unity的NDC中z的范围是[-1,1]，而在DirectX中，NDC的z分量范围是多少？
[0,1]
顶点着色器可以有不同的输出方式，最常见的输出路径是经光栅化后交给什么进行处理？
片元着色器
场景可能很大，摄像机的视野范围有可能不会覆盖所有的物体，那些不在摄像机范围内的物体，不需要处理。什么因此被提出来？
裁剪
一个图元，部分在视野内部分在视野外，需要进行一个处理，这就是什么？
裁剪
裁剪的过程是不可编程的，而是什么上的固定操作？
硬件
顶点着色器输出的是即为坐标系下的坐标？
三维
什么阶段的任务时把每个图元的x和y坐标转换到屏幕坐标系？
屏幕映射
屏幕坐标系是一个二维坐标系，它和我们用于显示画面的什么有很大关系？
分辨率
屏幕映射不会对输入的什么坐标做任何处理？
z
屏幕坐标系和z坐标一起构成什么坐标系？
窗口坐标系
屏幕映射得到的屏幕坐标决定了这个顶点对应屏幕上哪个什么？
像素
OpenGL把屏幕左下角当成最小的窗口坐标值，而DirectX定义屏幕什么位置为最小窗口坐标值？
左上角
屏幕坐标系的差异可能造成什么？
图像倒转
光栅化阶段有哪两个最重要的目标？
1，计算每个图元覆盖了哪些像素；2，为这些像素计算它们的颜色
什么阶段会计算光栅化一个三角网格所需的信息？
三角形设置
上一个阶段输出的都是三角网格的顶点，如果要得到整个三角网格对像素的覆盖情况，必须计算每条边上的什么？
像素坐标
什么阶段将会检查每个像素是否被一个三角网格所覆盖？
三角形遍历
如果被覆盖的话，就会生成一个什么？
片元
三角形遍历阶段使用三角网格的3个顶点的顶点信息对整个覆盖区域的像素进行什么操作？
插值
三角形遍历阶段输出的是什么？
一个片元序列
一个片元并不是真正意义上的什么，而是包含了很多状态的集合？这些状态用于计算每个像素的最终颜色。
像素
前面的光栅化阶段实际上并不会影响屏幕上的每个像素的颜色值，而是会产生一系列的数据信息，用来表述什么？
一个三角网格是怎样覆盖每个像素的
什么负责存储这样的一系列数据？
每个片元
真正对像素产生影响的阶段是什么？
逐片元操作
片元着色器阶段有很多重要的渲染技术，其中最重要的技术之一是什么？
纹理采样
执行片元着色器时，不能将自己的任何结果直接发送给它的邻居，有一个例外就是片元着色器可以访问什么信息？
导数信息
逐片元操作对每一个什么进行操作？
片元
逐片元操作这一阶段有哪两个任务？
1，决定每个片元的可见性；2，颜色合并
决定每个片元的可见性包括哪些测试？
深度测试，模板测试
如果一个片元通过了所有的测试，就需要把片元的颜色值和已经存储在哪里的颜色进行合并？
颜色缓冲区
逐片元操作阶段可以配置吗？
高度可配置
与模板测试相关的是什么缓冲？该缓冲和我们经常听到的颜色缓冲、深度缓冲几乎是一类东西。
模板缓冲
不管一个片元有没有通过模板测试，我们都可以根据模板测试和下面的深度测试结果来修改什么，这个修改操作也是由开发者指定的？
模板缓冲区
如果开启了深度测试，GPU会把该片元的深度值和已经存在于什么中的深度值进行比较？
深度缓冲区
如果一个片元没有通过深度测试，它可以更改深度缓冲区中的值吗？
不可以
如果一个幸运的片元通过了上面的所有测试，它就可以自豪地来到什么功能的面前？
合并
当我们执行这次渲染时，颜色缓冲中往往已经有了上次渲染之后的颜色结果，那么，我们使用这次渲染得到的颜色完全覆盖掉之前的结果，还是进行其他处理？这就是什么需要解决的问题。
合并
对于不透明物体，开发者可以关闭什么操作？这样片元着色器计算得到的颜色值就会直接覆盖掉颜色缓冲区中的像素值。
混合
对于半透明物体，需要使用什么操作让这个物体看起来透明？
混合
尽可能在执行片元着色器之前进行这些测试，Unity使用的提前执行深度测试称为什么技术？
Early-Z
为了避免我们看到那些正在进行光栅化的图元，GPU使用什么策略？
双重缓冲
对场景的渲染是在幕后发生的，即在什么缓冲？
后置缓冲
一旦场景已经被渲染到了后置缓冲中，GPU就会交换后置缓冲和哪里的内容？
前置缓冲
OpenGL和DirextX是什么？
图像应用编程接口
这些接口架起了上层应用和什么的沟通桥梁？
底层GPU
一个应用程序向这些接口发送渲染命令，而这些接口会依次向什么发送渲染命令？
显卡驱动
什么真正知道如何和GPU通信，并把OpenGL和DirectX的函数调用翻译成了GPU能够听懂的语言？
显卡驱动
开发者通过图像编程接口发出渲染命令，这些渲染命令也称为什么？
Draw call
由于什么的存在，几乎所有的GPU既可以和OpenGL·合作，也可以和DirectX合作？
显卡驱动
在可编程管线出现之前，为了编写着色器代码，开发者使用什么语言？
汇编语言
为了给开发者们打开更方便的大门，就出现了更高级的什么？
着色语言
常见的着色语言有哪些？
DirectX的HLSL，OpenGL的GLSL和Navida的Cg
这些语言会被编译成什么？
汇编语言
什么语言的优点在于跨平台性？
GLSL
这种跨平台性是由于OpenGL没有提供什么，而是由显卡驱动完成编译工作？
着色器编译器
Draw Call中造成性能问题的元凶是CPU还是GPU？
CPU
为了让CPU和GGPU可以并行工作，需要使用什么？
一个命令缓冲区
命令缓冲区包含了一个命令队列，由CPU向其中添加命令，什么从中读取命令？
GPU
命令缓冲区中的名利有很多种类，Draw Call是一种，其他命令还有什么？
改变渲染状态
每次调用Draw Call之前，CPU需要向GPU发送很多内容，包括哪些？
数据，状态和命令等
GPU的渲染能力是很强的，渲染200个还是2000个三角网格通常并没有区别，因此渲染速度往往快于什么？
CPU提交命令的速度
如果Draw Call的数量太多，CPU就会把大量时间花费在什么上，造成CPU过载？
提交Draw Call上
主要的减少Draw Call的方法是什么？
批处理
提交什么样的Draw Call会造成性能瓶颈？
大量很小
吧很多小的Draw Call合并成一个大的Draw Call，这是什么思想？
批处理
我们需要在内存中合并网格，而合并的过程是需要消耗时间的，所以批处理技术更适合什么样的物体？
静态
动态无需需要在什么时候重新合并然后发送给GPU？
每一帧
批处理主要注意两点，1，避免使用什么样的网格？
大量很小
2，避免使用过多的什么？尽量在不同的网格之间共用同一个材质
材质
固定函数的流水线，简称为什么？
固定管线
固定渲染管线只可怎么样？
配置


