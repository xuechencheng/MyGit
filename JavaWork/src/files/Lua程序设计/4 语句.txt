第4章 语句
4.1 赋值
Lua允许多重赋值：a, b = 10, 2*x
在多重赋值中，Lua先对等号右边的所有元素求值，然后才执行赋值，交换两个变量：a[i], a[j] = a[j], a[i]
Lua总会将等号右边值的个数调整到与左边变量的个数相一致，若值的个数少于变量个数，那么多余的变量会被赋值为nil；若值的个数更多的话，多余的值会被丢掉。

4.2 局部变量与块
通过local语句来创建局部变量。
尽可能地使用局部变量是一种良好的编程风格。
local foo = foo表示创建一个局部变量foo，并用全局变量foo的值初始化它。

4.3 控制结构
Lua不支持switch语句。
一条repeat-until语句重复执行其循环体知道条件为真时结束。
for语句有两种形式：数字型for和泛型for。
如果想在for循环正常结束前终止循环，可以使用break。
Lua的基础库提供了ipairs，这是一个用于遍历数组的迭代器函数。
pairs迭代table元素。

4.4 break与return
break语句用于结束一个循环。
return语句用于从一个函数中返回结果。
由于语法构造的原因，break或return只能是一个块的最后一条语句。
有时可能希望在一个块的中间插入一条return或break。使用do return end。




