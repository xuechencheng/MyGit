第6章 深入函数
在Lua中，函数是一种第一类值，函数可以存储到变量中或table中，可以作为实参传递给其他函数，还可以作为其他函数的返回值。
词法域指的是一个函数可以嵌套在另一个函数中，内部的函数可以访问外部函数中的变量。
函数与所有其他值一样都是匿名的，即它们都没有名称。当讨论一个函数名时，实际上是在讨论一个持有某函数的变量。
function foo(x) return 2*x end 等价于 foo = function(x) return 2*x end
像sort这样的函数，接受另一个函数作为实参的，称其为高阶函数。高阶函数是一种强大的编程机制，应用匿名函数来创建高阶函数所需的实参则可以带来更大的灵活性。

6.1 closure（闭合函数）
匿名函数内部访问的外部函数中的变量既不是全局变量也不是局部变量，将其称为“非局部的变量”。
一个closure就是一个函数加上该函数所需访问的所有“非局部变量”。
编程：重新定义函数sin，使其参数能够使用角度来代替原先的弧度。

6.2 非全局的函数
函数不仅可以存储在全局变量中，还可以存储在table的字段中和局部变量中。

6.3 正确的尾调用
所谓尾调用就是一种类似于goto的函数调用。
当一个函数调用是另一个函数的最后一个动作时，该调用才算是一条“尾调用”。
比如 function f(x) return g(x) end
有一些语言实现（例如Lua解释器）可以得益于这个特点，使得在进行“尾调用”时不耗费任何栈空间。
function f(x) g(x) end就不是一条尾调用，当调用完g后，f并不能立即返回，它还需要丢弃g返回的临时结果。
在Lua中，只有“return <func>(args)”这样的调用形式才算是一条“尾调用”。










