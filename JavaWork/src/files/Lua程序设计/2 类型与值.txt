第2章 类型与值
Lua有8种基础类型：nil,boolean,number,string,userdata,function,thread和table。
函数type可根据一个值返回其类型名称。

2.1 nil

2.2 boolean
Lua将值false和nil视为假，而将除此之外的其他值视为真。

2.3 number

2.4 string
Lua的字符串是不可变的值。
Lua字符串和其他Lua对象一样，都是自动内存管理机制所管理的对象。
字面字符串需要以一对匹配的单引号或双引号来界定。
还可以用一对匹配的双方括号来界定一个字母字符串，就像写“块注释”那样。以这种形式书写的字符串可以延伸多行，Lua不会解释其中的转义序列。
在两个方括号间加上任意数量的等号，就像[===[。这样的字面字符串只有在遇到一个内嵌有相同数量等号的双右方括号时才会结束。
将字符串转换为数字，使用函数tonumber。
将数字转换为字符串，使用函数tostring。
在字符串前放置操作符“#”来获得该字符串的长度。

2.5 table
table类型实现了关联数组。
table的创建是通过构造表达式完成的，最简单的构造表达式就是{}。
当一个程序再也没有对一个table的引用时，Lua的垃圾收集器最终会删除该table，并复用它的内存。
Lua对于诸如a["name"]的写法提供了一种更改简便的语法糖，可以直接输入a.name。
就Lua的习惯而言，数组通常以1作为索引的初始值。
长度操作符“#”用于返回一个数组或线性表的最后一个索引值。

2.6 function
Lua既可以调用以自身Lua语言编写的函数，又可以调用以C语言编写的函数。
Lua所有的标准库都是用C语言写的。

2.7 userdata和thread









