linux的内核需要保护，我们通过什么跟内核通信？
shell
登录的时候系统会给我一个shell，让我们工作，这个shell记录在哪个文件？
/etc/passwd
bash具有命令记忆能力，命令记录在哪里？
~/.bash_history
查看别名的命令
alias
设置ls -al的快捷命令为lm
alias lm="ls -al"
每个用户的变量相同吗
不同
查看PATH变量
echo $PATH
设置变量时候=两边能有空格吗？
不能
单引号和双引号里面，$可以保留为一般字符的是哪个？
单引号
取消myname变量的设置
unset myname
将name变量变成环境变量
export name
查看环境变量的命令
env
代表用户的主文件夹的变量
HOME
PATH变量里，各目录之间用什么符号分隔
冒号
查看环境变量和自定义变量的命令
set
命令提示符[root@www ~]是什么变量设置的？
PS1
echo $$显示的是什么号码
PID
查看上个命令回传码
echo $?
自定义变量和环境变量的差异在于该变量时候被什么继续引用？
子进程
将所有的环境变量显示出来的命令
export
查看Linux支持哪些语系的命令
locale -a
使用用户输入设置atest变量
read atest
声明变量num=1+2+3
declare -i num=1+2+3
文件系统与程序进行限制的命令
ulimit
列出你目前身份的所有限制数据数值
ulimit -a
限制用户仅能创建10mb以下的容量的文件
ulimit -f 10240
显示删除掉PATH变量中的/usr/kerberos/sbin和/usr/kerberos/bin变量
echo ${PATH#/*kerberos/bin}
删除path变量，第一个目录，并显示
echo ${path#/*:}
符合替换文字的最短的那一个的符号
#
符合替换文字的最长的那一个的符号
##
前面提到的是从前面开始删除变量，如果从后面删除使用什么符号?
%
删除最后的一个目录
echo ${path%:*bin}
只保留第一个目录
echo ${path%%:*bin}
变量MAIL的值为/var/spool/mail/root，只打印root
echo ${MAIL##/*/}
相反只去掉root，保留目录
echo ${MAIL%/*}
将path的变量的第一个sbin替换成SBIN
echo ${path/sbin/SBIN}
将path的变量的所有sbin替换成SBIN
echo ${path//sbin/SBIN}
若变量内容从头开始的数据符合关键字，则将符合的最短的数据删除
${变量#关键字}
若变量内容从头开始的数据符合关键字，则将符合的最长的数据删除
${变量##关键字}
若变量内容从尾开始的数据符合关键字，则将符合的最短的数据删除
${变量%关键字}
若变量内容从尾开始的数据符合关键字，则将符合的最长的数据删除
${变量%%关键字}
若变量内容符合旧字符串，则第一个旧字符串会被新字符串替换
${变量/旧字符串/新字符串}
若变量内容符合旧字符串，则所有旧字符串会被新字符串替换
${变量//旧字符串/新字符串}
如果username变量不存在，则赋值为root
username=${username-root}
如果username变量不存在或者它是空字符串，则赋值为root
username=${username:-root}
将ls -all more改成lm
alias lm='ls -all | more'
查看所有别名命令
alias
取消lm的别名设置
unalias lm
查看历史命令的命令
history
查看最近10条
history 10
执行第五条历史记录命令
!5
执行上一个命令
!!
执行以al开头的历史命令
!al
寻找需要执行的命令的四个步骤
当前路径 别名 内置命令 path
登录信息设置的文件
/etc/issue
当我们使用telnet连接到主机时，主机的登录界面就会显示什么内容
/etc/issue.net
登录后取得一些信息，可以将信息设置在哪个文件？
/etc/motd
命令别名，自定义的变量，在你注销bash会怎么样
失效
从X Window启动终端接口没有再次输入账号与密码称为什么登录？
non-login shell
login shell会读取哪两个文件？
/etc/profile ~/.bash_profile或~/.bash_login或~/.profile
bash会依次读取~/.bash_profile,~/.bash_login和~/.profile，这三个文件中的一个还是三个？
一个
直接将配置文件内容读取到bash中，而不需要注销登录的命令
source或.
查看所有快捷键
stty -a
设置erase为Ctrl+h
stty erase ^h
暂停和恢复屏幕输出
Ctrl+S Ctrl+Q
通配符，代表0到无穷多各任意字符
*
代表一定有一个任意字符
?
a,b,c,d中任意一个
[abcd]
0-9所有数字
[0-9]
非abcd
[^abcd]
标准输入的代码和表示符号分别是什么
0 <或<<
标准输出的代码和符号
1 >或>>
标准错误输出的代码和符号
2 2>或2>>
将ll的信息输出到~/rootfile中
ll > ~/rootfile
如果要讲每次输出的内容累加到文件中，使用什么
>>
将find /home -name .bashrc正确的输出和错误输出分别存放到rightfile和errorfile
find /home -name .bashrc > rightfile 2> errorfile
不显示错误信息，只显示正确信息
find /home -name .bashrc > rightfile 2> /dev/null
将正确信息和错误信息都写到list中
find /home -name .bashrc &> list
将~/.bashrc内容写入到catfile中
cat > catfile < ~/.bashrc
将键盘的输入信息写入到catfile文件中，如果输入eof则结束
cat > catfile << "eof"
不考虑命令相关性的连续命令执行
cmd;cmd
如果第一个命令执行成功，则执行第二个命令你
cmd1&&cmd2
第一个命令执行不成功才执行第二个命令
cmd1||cmd2
如果/tmp/abc存在就创建/tmp/abc/test，如果不存在就先创建/tmp/abc
ls /tmp/abc || mkdir /tmp/abc && touch /tmp/abc/test
使用less命令读取/etc下面的文件列表信息
ls -al /etc | less
显示PATH的第3个和第5个信息
echo $PATH | cut -d ':' -f 3,5
显示export输出信息第12个字符之后的内容
export | cut -c 12-
last结果中，出现root的行读取出来
last | grep 'root'
last结果中，没有出现root的行读取出来
last | grep -v 'root'
将个人账号信息进行排序
cat /etc/passwd | sort
按个人账号信息的第三列内容排序
cat /etc/passwd | sort -t ':' -k 3
从last命令中取出账号，并排序
last | cut -d ' ' -f 1 | sort
从last命令中取出账号，并排序，并去掉重复信息
last | cut -d ' ' -f 1 | sort | uniq
从last命令中取出账号，并排序，并去掉重复信息，并统计次数
last | cut -d ' ' -f 1 | sort | uniq -c
查看/etc/man.config里面有多少相关字，行，字符数
cat /etc/man.config | wc
查看这个月登陆系统的总人次
last | grep [a-zA-Z] | grep -v 'wtmp' | wc -l
将数据同时流向文件和屏幕的命令
tee
将/home下的文件信息存到~/.homefile，并在屏幕用more处理
ls -al /home | tee ~/.homefile | more
删除一段信息当中的文字，或进行文字信息的替换
tr
将last输出的信息的小写字符变成大写字符
last | tr '[a-z]' '[A-Z]'
将/etc/passwd输出信息中的冒号删除
cat /etc/passwd | tr -d ":"
将tab键转换成对等的空格键
col -x
在文字内有反斜杠时，保留反斜杠最后接的那个字符
col -b
将两个文件当中有相同数据的那一行加在一起
join
将/etc/passwd与/etc/shadow同一行粘贴到一起
paste /etc/passwd /etc/shadow
将一个大文件依据文件大小或行数切割称为小文件的命令
split
将/etc/termcap文件分成300kb一个文件
split -b 300k /etc/termcap termcap
将三个小文件合并成一个文件
cat termcap* >> tercapback

