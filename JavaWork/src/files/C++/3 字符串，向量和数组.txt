有了using声明就无须专门的前缀也能使用所需的名字。每个using声明引入命名空间中的一个成员。using std::cin
头文件不应包含using声明。
如果使用=号初始化一个变量，实际上执行的是拷贝初始化，不使用等号，执行的是直接初始化比如string s4(10,'c').
string s;cin >> s;读取时string对象会自动忽略开头的空白，并遇到下一处空白停止。如果输入的是"  Hello World! "，读取的将是"Hello"。
使用getline读取一整行，getline函数的参数是一个输入流和一个string对象。
编程：每次读入一整行，直至到达文件末尾。
string.size()返回的类型为string::size_type。这是一个无符号数，因此切忌在表达式中混用了带符号数将可能产生意想不到的结果。
当把string对象和字符字面值及字符串字面值混在一条语句中使用时，必须确保每个加法运算符的两侧的运算对象至少有一个string。string = "Hello " + " World"是非法的。
字符串字面值与string是不同的类型。
可以使用for循环来遍历string。for(char c : str)。
编程：统计"Hello world!!!"中标点字符的个数。
如果想要改变string对象中字符的值，必须把循环变量定义成引用类型。编程：把字符串改写为大写字母的形式。
可以使用下标访问string对象。也可以进行赋值。

Vector
vector能容纳绝大多数类型的对象作为其元素，但是因为引用不是对象，所以不存在包含应用的Vector。
vector<int> ivec(10);//10个元素，每个都初始化为0
编程：使用vector按分段统计输入的成绩。

迭代器
有迭代器的类型同事拥有返回迭代器的成员，这些类型都拥有名为begin和end的成员。end表示尾元素的下一个位置。如果容器为空，begin和end返回相同。
编程：使用迭代器把字符串改成大写形式。
如果对象只需读操作而无须写操作的话最好使用常量类型，为了便于得到const_iterator类型，可以使用cbegin和cend。
迭代器解引用：it->mem和(*it).mem表达的意思相同。
但凡是使用了迭代器的循环体，都不要向迭代器所属的容器添加元素。
编程：使用迭代器完成二分搜索

数组
维度说明了数组中元素的个数，编译的时候维度应该是已知的。维度必须是一个常量表达式。
数组的元素应为对象，因此不存在引用的数组。
可以用字符串字面值对数组进行初始化，但是要注意字符串字面值的结尾处有一个空字符。
含有10个整型指针的数组：int *ptrs[10]。
指向一个含有10个整数的数组和引用一个含有10个整数的数组：int (*Parry)[10]和int (&arrRef)[10]。
可以使用for循环来遍历数组。
使用数组时，编译器一般会把它转换成指针。
很多用到数组名字的地方，编译器都会自动地将其替换为一个指向数组首元素的指针。string *p = nums 等价于 string *p = &nums[0];
获取数组的首位：begin(arr)和end(arr)。
C风格字符串char ca[] = "A string example"。
string s;char *str = s 是错误的， const char *str = s.c_str()是正确的。
严格来说，C++语言没有多维数组，多维数组其实是数组的数组。






