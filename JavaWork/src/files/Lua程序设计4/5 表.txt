第5章 表
Lua语言中的表本质上是一种辅助数组，这种数组不仅可以使用数值作为索引，也可以使用字符串或其他任意类型的值作为索引。
对于一个表而言，当程序中不再有指向它的引用时，垃圾收集器会最终删除这个表并重用其占用的内存。

5.1 表索引
Lua语言实际上就是使用表来存储全局变量的。
a.name等价于a["name"]

5.2 表构造器
a = {x = 10, y = 20}
opnames = {["+"] = "add", ["-"] = "sub"}

5.3 数组，列表和序列
把所有元素都不为nil的数组称为序列。获取序列长度的操作符为#。

5.4 遍历表
可以使用pairs迭代器遍历表中的键值对，遍历过程中元素的出现顺序可能是随机的。
对于列表而言，可以使用ipairs迭代器。

5.5 安全访问
在C#中a?.b当a为nil时，其结果是nil而不会产生异常。
lua中使用(a or {}).b

5.6 表标准库
table.insert向序列的指定位置插入一个元素，其他元素依次后移。
如果不指定位置，就会在序列的最后插入指定的元素。
table.remove删除并返回序列指定位置的元素，其后的元素向前移动填充删除元素后造成的空洞。
Lua5.3对于移动表中的元素引入一个更通用的函数table.move( a, f, e, t)，调用该函数可以将表a中从索引f到e的元素移动到位置t上。





