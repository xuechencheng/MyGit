21 面向对象编程
从很多意义上讲，Lua语言中的一张表就是一个对象。
使用参数self是所有面向对象语言的核心点。大多数面向对象语言都向程序员隐藏了这个机制，从而使得程序员不必显示地声明这个参数。
Lua语言可以使用冒号操作符隐藏该参数。
冒号只是一种语法机制，虽然很便利，但没有引入任何新东西。我们可以使用点分语法来定义一个函数，然后用冒号语法调用它。

21.1 类
还需要实现类体系，继承和私有性。
如果有两个对象A和B，要让B称为A的一个原型，只需要setmetatable(A,{__index=B})
编程：实现Account的new方法

21.2 继承
SpecialAccount = Account:new()
SpecialAccount也继承了Account的new方法。
Lua中，无需为了指定一种新行为而创建一个新类。

21.3 多重继承
编程：一种多重继承的实现

21.4 私有性
通过两个表来表示一个对象，一个表用来保存对象的状态，另一个表用于保存对象的操作。
通过第二个表来访问对象本身。表示对象状态的表不保存在其他表的字段中，而只保存在方法的闭包中。

21.5 单方法对象
对象只有一个方法的情况。
d = newObject(0)	d("get")	d("set", 10)

21.6 对偶表示

