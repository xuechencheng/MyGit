第3章 数值
在Lua5.2及之前的版本中，所有的数值都以双精度浮点格式表示。
从Lua5.3版本开始，Lua为数字格式提供了两种选择：被称为integer的64位整型和被称为float的双精度浮点类型。
对于资源受限的平台，我们可以将Lua5.3编译为精简Lua模式，在该模式中使用32位整型和单精度浮点类型。
整型的引入是Lua5.3的一个重要标志，也是与之前版本相比的主要区别。

3.1 数值常量
type(3)和type(3.0)都是number。
math.type(3)是integer；math.type(3.0)是float。
0x开头表示十六进制常量。
使用string.format("%a",419)进行十六进制的格式化输出。

3.2 算术运算
取整除法floor，运算符为//
开发人员要么选择忽略整型和浮点数二者之间的不同，要么完整地控制每一个数值的表示。
floor除法可以与其他算术运算一样遵循同样的规则：如果操作数都是整型值，那么结果就是整型值，否则就是浮点型值（值为整数）。
取模运算的定义：a % b == a - ((a // b) * b)
x - x % 0.01 恰好是x保留两位小数的结果
幂运算符：^ x^0.5可以计算x的平方根

3.3 关系运算
比较数值时应永远忽略数值的子类型，数值究竟是以整型还是浮点型类型表示并无区别，只与算术值有关。

3.4 数学库
所有的三角函数都以弧度为单位，并通过函数deg和rad进行角度和弧度的转换。

3.4.1 随机数发生器
math.random用于生成伪随机数。
共有三种调用方式，不带参数调用时，返回一个在[0,1)范围内的伪随机实数。当使用带有一个整型值n的参数调用时，返回[1,n]范围内随机整数。
当使用带有两个整型值l和u的参数调用时，该函数返回[l,u]范围内的伪随机整数。
函数randomseed用于设置伪随机数发生器的种子。math.randomseed(os.time())

3.4.2 取整函数
floot向负无穷取整，ceil向正无穷取整，modf向零取整。

3.5 表示范围
标准Lua使用64个比特位来存储整型值，其最大值为2的63次方-1。精简Lua使用32个比特位存储整型值。
双精度浮点数对于大多数实际应用而言是足够大的。

3.6 惯例

3.7 运算符优先级

3.8 兼容性
程序员基本上可以忽略整型值和浮点值之间的不同。




