Unity Addressable Asset system
What is an Addressable Asset?
Making an asset "Addressable" allows you to use that asset's unique address to call it from anywhere. 
Whether that asset resides in the local application or on a content delivery network, the Addressable Asset System locates and returns it. 
You can load a single Addressable Asset via its address, or load many Addressable Assets using a custom group label that you define.

Addressable Assets overview
The Addressable Assets System consists of two packages:
	Addressable Assets package (primary package)
	Scriptable Build Pipeline package (dependency)
The following concepts are referenced throughout this documentation:
	Address: An asset's location identifier for easy runtime retrieval.
	AddressableAssetData directory: Stores your Addressable Asset metadata in your projectâ€™s Assets directory.
	Asset group: A set of Addressable Assets available for build-time processing.
	Asset group schema: Defines a set of data that you can assign to a group and use during the build.
	AssetReference: An object that operates like a direct reference, but with deferred initialization. The AssetReference object stores the GUID as an Addressable that you can load on demand.
	Asynchronous loading: Allows the location of the asset and its dependencies to change throughout the course of your development without changing the game code. Asynchronous loading is foundational to the Addressable Asset System.
	Build script: Runs asset group processors to package assets, and provides the mapping between addresses and Resource locations for the Resource Manager.
	Label: Provides an additional Addressable Asset identifier for runtime loading of similar items (for example, Addressables.DownloadDependenciesAsync("spaceHazards");).
